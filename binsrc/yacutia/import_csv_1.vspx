<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2014 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="db_rdf_class" decor="yacutia_decor.vspx" style="yacutia_style.xsl"
        fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/"
        xmlns:vm="http://www.openlinksw.com/vspx/macro"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN">
  <vm:pagetitle>CSV Import</vm:pagetitle>
  <vm:pagewrapper>
  <vm:variables>
  </vm:variables>
  <vm:menu>
  </vm:menu>
  <vm:variables>
      <v:variable name="upl_file" type="varchar" default="null" persist="temp" />
      <v:variable name="enc_file" type="varchar" default="null" persist="temp" />
  </vm:variables>

  <vm:header caption="CSV Import"/>
  <vm:pagebody>
      <v:on-init><![CDATA[
	declare pos, mode int;
	declare ses, bh any;

	mode := atoi(get_keyword('choice_source', params, '-1'));
	if (mode = 0 and e.ve_is_post and e.ve_button is not null and e.ve_button.vc_name = 'upl_btn')
	{
	  pos := position ('package_path1', params);
	  if (pos)
	    {
	      declare i, ret integer;
	      declare tmp_name, attr, path varchar;

	      ses := aref_set_0 (params, pos);
	      attr := get_keyword ('attr-package_path1', params, vector ());
	      tmp_name := get_keyword ('filename', attr, '');
	      if (tmp_name = '')
	        {
	      while (i < 20)
                {
                  tmp_name := sprintf('%s%d', tmp_name, rnd(10));
                  i := i + 1;
                }
		  tmp_name := tmp_name || '.csv';   
		}
              if (tmp_name like '%.gz' and isstring (ses))
                {
		  tmp_name := regexp_replace (tmp_name, '\.gz\x24', '');
		  ses := gzip_uncompress (ses); 
		}
                 	      
	      path := concat('/DAV/temp/', tmp_name);
	      if (ses is not null and length (ses))
	        {
		  set isolation='repeatable';
		  connection_set ('vspx_user', 'dav');
		  YACUTIA_DAV_COL_CREATE('/DAV/temp/', '111101101N', 'dav', 'administrators');
		  ret := DB.DBA.YACUTIA_DAV_RES_UPLOAD (path, ses, '', '111101101N', 'dav', 'administrators', now(), now(), null);
		  connection_set ('vspx_user', null);
		  if (ret < 0)
		    {
		      rollback work;
		      self.vc_is_valid := 0;
		      self.vc_error_message := DAV_PERROR (ret);
		    }
		  else
		    {
		      self.upl_file := path;
		    }
	        }
	    }
	}
	if (mode = 3 and e.ve_is_post and e.ve_button is not null and e.ve_button.vc_name = 'upl_btn')
	  {
	    declare i, ret integer;
	    declare tmp, arr, url, h any; 
	    declare tmp_name, path varchar;
	    declare exit handler for sqlstate '*' {
	      self.vc_is_valid := 0;
	      self.vc_error_message := __SQL_MESSAGE;
	      return;
	    }; 
            url := get_keyword ('url_path', params, '');
	    arr := WS.WS.PARSE_URI (url);
	    tmp := arr[2];
	    tmp := split_and_decode (tmp, 0, '\0\0/');
	    if (length (tmp))
	      {
	        tmp_name := tmp[length (tmp) - 1];
	        path := concat('/DAV/temp/', tmp_name);
              }		
            else
	      {
	        tmp_name := '';
	        while (i < 20)
                  {
                    tmp_name := sprintf('%s%d', tmp_name, rnd(10));
                    i := i + 1;
                  }
		path := concat('/DAV/temp/', tmp_name, '.csv');
	      }
	    ses := http_client_ext (url, headers=>h);
	    if (tmp_name like '%.gz' and isstring (ses))
	      {
		tmp_name := regexp_replace (tmp_name, '\.gz\x24', '');
		ses := gzip_uncompress (ses); 
	      }
	    if (ses is not null and length (ses))
	    {
	      set isolation='repeatable';
	      connection_set ('vspx_user', 'dav');
	      YACUTIA_DAV_COL_CREATE('/DAV/temp/', '111101101N', 'dav', 'administrators');
	      ret := DB.DBA.YACUTIA_DAV_RES_UPLOAD (path, ses, '', '111101101N', 'dav', 'administrators', now(), now(), null);
	      connection_set ('vspx_user', null);
	      if (ret < 0)
		{
		  rollback work;
		  self.vc_is_valid := 0;
		  self.vc_error_message := DAV_PERROR (ret);
		}
	      else
		{
		  self.upl_file := path;
		  self.enc_file := http_request_header (h, 'Content-Type', 'charset', null);
		}
	    }

	  }
	   
      ]]></v:on-init>
      <v:form name="inx_form" type="simple" method="POST" action="" xhtml_enctype="multipart/form-data">
        <table class="ctl_grp">
          <tr class="ctl_grp_title">
            <th>Select Source</th>
          </tr>
          <tr>
            <td>
	      <v:radio-button name="rb_fs" xhtml_id="rb_fs" value="2" group-name="choice_source"
		auto-submit="1"
		initial-checked="1"/>
              <label for="rb_fs">Server-side file</label>
            </td>
	    <td>
	      <?vsp if (self.rb_fs.ufl_selected) { ?>
              <v:text name="fs_package_path" xhtml_size="70"/>
	      <vm:file_browser ses_type="yacutia" render="popup" list_type="details" flt="yes" flt_pat="*.csv;*.csv.gz" path="DAV" 
		  browse_type="res" w_title="File Browser" title="File Browser" lang="en" return_box="fs_package_path"/>
	      <?vsp } ?>
            </td>
          </tr>
          <tr>
            <td>
	      <v:radio-button name="rb_dav" xhtml_id="rb_dav" value="1" group-name="choice_source"
		auto-submit="1"
		/>
              <label for="rb_dav">DAV resource</label>
            </td>
            <td>
	      <?vsp if (self.rb_dav.ufl_selected) { ?>
              <v:text name="package_path" xhtml_size="70"/>
	      <vm:dav_browser ses_type="yacutia" render="popup" list_type="details" flt="yes" flt_pat="*.csv" path="DAV" 
		  browse_type="res" w_title="DAV Browser" title="DAV Browser" 
		  lang="en" return_box="package_path"/>
	      <?vsp }  ?>
            </td>
          </tr>
          <tr>
            <td>
	      <v:radio-button name="rb_upload" xhtml_id="rb_upload" value="0" group-name="choice_source"
		auto-submit="1"
		/>
              <label for="rb_upload">Upload file</label>
            </td>
            <td>
	      <?vsp if (self.rb_upload.ufl_selected) { ?>
	      <input type="file" name="package_path1" size="70"></input>
	      <?vsp } ?>
            </td>
          </tr>
          <tr>
            <td>
	      <v:radio-button name="rb_url" xhtml_id="rb_url" value="3" group-name="choice_source"
		auto-submit="1"
		/>
              <label for="rb_url">URL</label>
            </td>
            <td>
	      <?vsp if (self.rb_url.ufl_selected) { ?>
              <v:text name="url_path" xhtml_size="70"/>
	      <?vsp } ?>
            </td>
          </tr>
          <tr>
            <td>
              <v:button action="simple" value="Proceed" name="upl_btn">
                <v:on-post>
                  <![CDATA[
                    declare mode, path, tmp_name varchar;
                    declare _file any;
		    declare ret integer;

		    if (self.vc_is_valid = 0)
		      return;

                    path := '';
                    mode := atoi(get_keyword('choice_source', control.vc_page.vc_event.ve_params));
                    if (mode = 0)
                    {
		      if (self.upl_file is not null)
		        {
		          path := self.upl_file;
			  commit work;
			}
		      else
		        {
			  rollback work;
		          self.vc_is_valid := 0;
			  self.vc_error_message := 'The file does not exists or it is empty.';
			  return;
	                }
                    }
                    else if (mode = 1)
                    {
                      path := get_keyword('package_path', control.vc_page.vc_event.ve_params);
                    }
                    else if (mode = 2)
                    {
                      path := get_keyword('fs_package_path', control.vc_page.vc_event.ve_params);
                    }
                    else if (mode = 3)
                    {
		      if (self.upl_file is not null)
		        {
		          path := self.upl_file;
			  commit work;
			}
		      else
		        {
			  rollback work;
		          self.vc_is_valid := 0;
			  self.vc_error_message := 'The file does not exists or it is empty.';
			  return;
	                }
                    }
                    if (path = '' or path is null)
                    {
                      self.vc_error_message := 'Please, enter correct path';
                      self.vc_is_valid := 0;
                      return;
                    }
		    self.vc_redirect (sprintf ('import_csv_opts.vspx?path=%U&mode=%d&enc=%U', path, case when mode = 2 then 0 else 1 end, case when self.enc_file is not null then self.enc_file else '' end));
                  ]]>
                </v:on-post>
              </v:button>
            </td>
          </tr>
        </table>
      </v:form>

  </vm:pagebody>
  </vm:pagewrapper>
</v:page>
