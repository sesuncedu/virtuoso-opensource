<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2014 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="ldap_import_directory"
  decor="yacutia_decor.vspx"
  style="yacutia_style.xsl"
  fast-render="1"
  xmlns:v="http://www.openlinksw.com/vspx/"
  xmlns:vm="http://www.openlinksw.com/vspx/macro"
  doctype="-//W3C//DTD XHTML 1.0 Transitional//EN">
  <vm:pagetitle>Virtuoso Account Management</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable name="mode" type="varchar" default="'add'" />
    </vm:variables>
    <vm:menu>
      <vm:menuitem value="LDAP Servers"/>
    </vm:menu>
    <vm:header caption="LDAP Servers"/>
    <vm:pagebody>
      <table border="0" width="100%" height="100%" cellpadding="0" cellspacing="0">
        <tr valign='top'>
          <td>
            <table cellpadding='10' cellspacing='0' border='0' width='100%'>
              <tr>
                <td>
                  <table cellpadding="0" cellspacing="0" border="0">
                    <colgroup>
                      <col/>
                      <col/>
                      <col/>
                      <col/>
                      <col/>
                      <col/>
                    </colgroup>
                    <tr>
                        <td class="page_tab" align="center">
                          <v:url name="b_url31" value="--'Users'" format="%s" url="--'accounts_page.vspx?page=1'" xhtml_class="uddi"/>
                        </td>
                        <td class="page_tab" align="center">
                          <v:url name="b_url32" value="--'Roles'" format="%s" url="--'accounts_page.vspx?page=2'" xhtml_class="uddi"/>
                        </td>
                        <td class="page_tab" align="center">
			  <v:url name="b_url14" value="Grants"  url="accounts_page.vspx?page=3" xhtml_class="uddi"/>
                        </td>
                        <td class="page_tab" align="center">
			  <v:url name="b_url15" value="LDAP Import"  url="ldap_import.vspx" xhtml_class="uddi"/>
                        </td>
                        <td class="page_tab_selected" align="center">
                          LDAP Servers
                        </td>
                        <td class="page_tab_empty" align="center" width="100%">
                          <table cellpadding="0" cellspacing="0">
                            <tr>
                              <td width="100%" >
                              </td>
                            </tr>
                          </table>
                        </td>
                    </tr>
                  </table>
                  <table class="tab_page">
                    <tr>
		      <td valign="top">
			<b><v:label name="mm" value="--''" render-only="0">
			  <v:before-render>
			    ;
			  </v:before-render>
		      </v:label></b>
      <v:form type="simple" name="ldsf1" method="POST" >
	<table class="ctl_grp">
	  <tr>
	    <td CLASS="genlisthead">Host name</td>
	    <td CLASS="geninput">
	      <v:text xhtml_size="55" name="host" value="" >
		  <v:validator test="regexp" regexp="^(ldap://|ldaps://)?[a-zA-z0-9][a-zA-z0-9\.]*$" message="Invalid host name"
		  runat="client"/>
		<v:before-render>
		  if (self.mode = 'edit')
		    control.vc_add_attribute ('disabled', '1');
		</v:before-render>
	      </v:text>
	    </td>
	  </tr>
	  <tr>
	    <td CLASS="genlisthead">Port</td>
	    <td CLASS="geninput">
	      <v:text xhtml_size="5" name="port" value="389">
		<v:before-render>
		  if (self.mode = 'edit')
		    control.vc_add_attribute ('disabled', '1');
		</v:before-render>
	      </v:text>
	    </td>
	  </tr>
	  <tr>
	      <td CLASS="geninput">
		<v:check-box name="ssl" value="1" xhtml_id="ssl"/>
	      </td>
	      <td CLASS="genlisthead"><label for="ssl">Try TLS</label></td>
	    </tr>
	  <tr>
	    <td CLASS="genlisthead">Base</td>
	    <td CLASS="geninput">
	      <v:text xhtml_size="55" name="base" value=""/>
	    </td>
	  </tr>
	  <tr>
	    <td CLASS="genlisthead">Bind DN</td>
	    <td CLASS="geninput">
	      <v:text xhtml_size="55" name="bind" value=""/>
	      </td>
	    </tr>
	    <tr>
	      <td CLASS="genlisthead">UID field</td>
	      <td CLASS="geninput">
		<v:text xhtml_size="55" name="uidf" value="" />
	      </td>
	    </tr>
	    <tr>
	      <td CLASS="genlisthead">Account</td>
	      <td CLASS="geninput">
		<v:text xhtml_size="55" name="uid" value="" />
	      </td>
	    </tr>
	    <tr>
	      <td CLASS="genlisthead">Password</td>
	      <td CLASS="geninput">
		<v:text xhtml_size="55" name="pwd" value="" type="password"/>
	      </td>
	    </tr>
	    <tr>
	      <td CLASS="genlisthead">LDAP Version</td>
	      <td CLASS="geninput">
		<v:select-list name="lver">
		  <v:item value="2" name="2"/>
		  <v:item value="3" name="3"/>
		</v:select-list>
	      </td>
	    </tr>
	    <tr>
	      <td colspan="2" CLASS="genlisthead">
		<v:button action="simple" name="tst" value="Test">
		  <v:on-post>
		    declare addr any;
		    declare exit handler for sqlstate '*'
		    {
		      rollback work;
		      self.vc_is_valid := 0;
		      self.vc_error_message := __SQL_MESSAGE;
		      return;
		    }
		    ;

		    connection_set ('LDAP_VERSION', atoi(self.lver.ufl_value));
		    if (self.host.ufl_value not like 'ldap%://%')
		    addr := 'ldap://'||self.host.ufl_value||':'||self.port.ufl_value;
		    else  
		      addr := self.host.ufl_value||':'||self.port.ufl_value;
		    dbg_obj_print (addr);
		    ldap_search (addr, self.ssl.ufl_selected, self.base.ufl_value, sprintf ('(%s=%s)', self.uidf.ufl_value, self.uid.ufl_value),
		    sprintf('%s=%s, %s', self.uidf.ufl_value, self.uid.ufl_value, self.bind.ufl_value),
		    self.pwd.ufl_value);

		    self.mm.ufl_value := 'Connection successful.';
		  </v:on-post>
		</v:button>
		<v:button action="simple" name="get" value="-- case when self.mode = 'edit' then 'Save' else 'Add' end">
		  <v:on-post>
		    declare addr, ssl any;
		    declare exit handler for sqlstate '*'
		    {
		      rollback work;
		      self.vc_is_valid := 0;
		      self.vc_error_message := __SQL_MESSAGE;
		      return;
		    }
		    ;

		    connection_set ('LDAP_VERSION', atoi(self.lver.ufl_value));
		    if (self.host.ufl_value not like 'ldap%://%')
		    addr := 'ldap://'||self.host.ufl_value||':'||self.port.ufl_value;
		    else 
		      addr := self.host.ufl_value||':'||self.port.ufl_value;
		    ldap_search (addr, self.ssl.ufl_selected, self.base.ufl_value, sprintf ('(%s=%s)', self.uidf.ufl_value, self.uid.ufl_value),
		    sprintf('%s=%s, %s', self.uidf.ufl_value, self.uid.ufl_value, self.bind.ufl_value),
		    self.pwd.ufl_value);
		    ssl := self.ssl.ufl_selected;

		    if (self.mode = 'edit')
		    {
		      insert replacing SYS_LDAP_SERVERS
			  (LS_ADDRESS, LS_BASE, LS_BIND_DN, LS_UID_FLD, LS_LDAP_VERSION, LS_ACCOUNT, LS_PASSWORD, LS_TRY_SSL)
			  values
			  (addr, self.base.ufl_value, self.bind.ufl_value, self.uidf.ufl_value, atoi(self.lver.ufl_value),
			  self.uid.ufl_value, self.pwd.ufl_value, ssl);
		    }
		    else
		    {
		      insert soft SYS_LDAP_SERVERS
			  (LS_ADDRESS, LS_BASE, LS_BIND_DN, LS_UID_FLD, LS_LDAP_VERSION, LS_ACCOUNT, LS_PASSWORD, LS_TRY_SSL)
			  values
			  (addr, self.base.ufl_value, self.bind.ufl_value, self.uidf.ufl_value, atoi(self.lver.ufl_value),
			  self.uid.ufl_value, self.pwd.ufl_value, ssl);
		      if (not row_count())
			{
			  self.vc_is_valid := 0;
			  self.vc_error_message := 'An LDAP server with same address is already defined.';
			  return;
			}
		    }

		    foreach (vspx_control c in self.ldsf1.vc_children) do
		      {
		        declare fld vspx_field;
			if (c is not null
			        and udt_instance_of (c, fix_identifier_case ('vspx_field'))
			        and not udt_instance_of (c, fix_identifier_case ('vspx_button'))
			    )
			  {
			    fld := c;
			    fld.ufl_value := '';
			  }
		      }
		   self.mode := 'add';
		   self.lds.vc_data_bind (e);
		  </v:on-post>
		</v:button>
	      </td>
	    </tr>
	  </table>
	</v:form>
	<table class="listing">
	  <tr class="listing_header_row">
	    <th>
	      Address
	    </th>
	    <th>
	      Base
	    </th>
	    <th>
	      LDAP version
	    </th>
	    <th>
	      Action
	    </th>
	  </tr>
	<v:data-set name="lds" scrollable="1" nrows="1000" cursor="keyset" edit="0">
	  <v:sql>
	    select LS_ADDRESS, LS_BASE, LS_LDAP_VERSION, LS_BIND_DN, LS_UID_FLD, LS_ACCOUNT, LS_PASSWORD, LS_TRY_SSL from SYS_LDAP_SERVERS
	  </v:sql>
	  <v:template type="repeat" name="ldst1">
	    <v:template type="browse" name="ldst2">
	      <tr class="<?V case when mod(control.te_ctr, 2) = 0 then 'listing_row_odd' else 'listing_row_even' end ?>">
		<td>
                       <v:label name="lb1"
                                value="--(control.vc_parent as vspx_row_template).te_rowset[0]"
                                format="%s"/>
		</td>
		<td>
                       <v:label name="lb1"
                                value="--(control.vc_parent as vspx_row_template).te_rowset[1]"
                                format="%s"/>
		</td>
		<td>
                       <v:label name="lb1"
                                value="--(control.vc_parent as vspx_row_template).te_rowset[2]"
                                format="%d"/>
			    </td>
			    <td class="listing_col_action">
			      <v:button name="edit1" value="Edit" style="url" action="simple">
				<v:on-post><![CDATA[
				  declare hf, arr, host, port any;

				  hf := WS.WS.PARSE_URI ((control.vc_parent as vspx_row_template).te_rowset[0]);
				  arr := split_and_decode (hf[1], 0, '\0\0:');
				  self.host.ufl_value := arr[0];
				  if (length (arr) > 1)
				    self.port.ufl_value := arr[1];
				  else
				    self.port.ufl_value := '389';
				  self.base.ufl_value := (control.vc_parent as vspx_row_template).te_rowset[1];
				  self.bind.ufl_value := (control.vc_parent as vspx_row_template).te_rowset[3];
				  self.uidf.ufl_value := (control.vc_parent as vspx_row_template).te_rowset[4];
				  self.lver.ufl_value := (control.vc_parent as vspx_row_template).te_rowset[2];
				  self.lver.vs_set_selected ();
				  self.uid.ufl_value := (control.vc_parent as vspx_row_template).te_rowset[5];
				  self.pwd.ufl_value := (control.vc_parent as vspx_row_template).te_rowset[6];
				  self.mode := 'edit';
				  self.get.vc_data_bind (e);
				  ]]></v:on-post>
			      </v:button>
			      <v:button name="del1" value="Delete" style="url" action="simple">
				<v:on-post>
				  delete from SYS_LDAP_SERVERS where LS_ADDRESS =
				  	(control.vc_parent as vspx_row_template).te_rowset[0];
			          self.lds.vc_data_bind (e);
				</v:on-post>
			      </v:button>
			    </td>
	      </tr>
	  </v:template>
	  </v:template>
	</v:data-set>
      </table>
                      </td>
                    </tr>
                  </table>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
