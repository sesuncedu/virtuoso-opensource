<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2014 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="sparql_create_page"
        decor="yacutia_decor.vspx"
        style="yacutia_style.xsl"
        vm:owner="yacutia_sparql_page"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        fast-render="1"
        xmlns:v="http://www.openlinksw.com/vspx/"
        xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <vm:pagetitle>Sponger</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable name="del_item" default="null" type="int" param-name="del"/>
      <v:variable name="edit_item" default="null" type="int" param-name="edit"/>
      <v:variable name="step" default="0" type="int" persist="0"/>
    </vm:variables>
    <vm:menu>
      <vm:menuitem value="Cartridges"/>
    </vm:menu>
    <vm:header caption="Extractor Cartridges"/>
    <vm:pagebody>
      <![CDATA[
	      <script language="JavaScript" src="admin_utils.js"></script>
      ]]>
      <table border="0" width="100%" height="100%" cellpadding="0" cellspacing="0">
        <tr valign='top'>
          <td>
      		<!-- tab -->
            <table cellpadding='10' cellspacing='0' border='0' width='100%'>
              <tr>
                <td>
                  <table cellpadding="0" cellspacing="0" border="0">
                    <colgroup>
                      <col/>
                      <col/>
                      <col/>
                      <col/>
                      <col/>
                    </colgroup>
                    <tr>
                      <td class="page_tab_selected" align="center" nowrap="1">
                        Extractor Cartridges
          		        </td>
      			          <?vsp if (check_package('rdf_mappers') or check_package ('cartridges')) { ?>
                      <td class="page_tab" align="center" nowrap="1">
                        <v:url name="url2" value="Meta Cartridges" format="%s" url="rdf_filters_pp.vspx" xhtml_class="uddi"/>
      		            </td>
                      <td class="page_tab" align="center" nowrap="1">
                        <v:url name="url1" value="Stylesheets" format="%s" url="sparql_filters.vspx" xhtml_class="uddi"/>
      		            </td>
                      <td class="page_tab" align="center" nowrap="1">
                        <v:url name="url3" value="Console" format="%s" url="rdf_console.vspx" xhtml_class="uddi"/>
		      </td>
                      <td class="page_tab" align="center" nowrap="1">
                        <v:url name="url4" value="Configuration" format="%s" url="rdf_conf.vspx" xhtml_class="uddi"/>
		      </td>
                      <?vsp } ?>
                      <td class="page_tab_empty" align="center" width="100%">
                        <table cellpadding="0" cellspacing="0">
                          <tr>
                            <td width="100%">
                            </td>
                          </tr>
                        </table>
                      </td>
                    </tr>
                  </table>
                  <table class="tab_page">
                    <tr>
                      <td valign="top">
      		            <!-- tab -->
                        <table cellpadding='10' cellspacing='0' border='0' width='100%'>
                          <tr>
                      		  <td>
                              <v:form name="fm" type="simple" method="POST">
                        	      <table class="listing" rules="groups">
                          	      <colgroup>
                              		  <col/>
                              		  <col/>
                              		  <col/>
                              		  <col/>
                              		  <col/>
                          	      </colgroup>
                          	      <tr class="listing_header_row">
  		                              <th style="width:5px;" nowrap="1"><input type="checkbox" name="select_all" value="Select All" onClick="selectAllCheckboxes_mask(this.form, this, 'cb_item')"/></th>
  		                              <th>Seq#</th>
                              		  <th colspan="2">Description</th>
                              		  <th>Pattern</th>
                              		  <th width="1%">Action</th>
                          	      </tr>
                                  <v:data-source name="ds_maps" expression-type="sql" nrows="1000" initial-offset="0">
                                    <v:before-data-bind>
                                      <![CDATA[
                                        control.ds_sql := 'select RM_PATTERN, RM_TYPE, RM_DESCRIPTION, RM_ID, RM_HOOK, RM_KEY, RM_ENABLED, RM_OPTIONS from DB.DBA.SYS_RDF_MAPPERS order by 4';
                                      ]]>
                                    </v:before-data-bind>
                                  </v:data-source>

                                  <v:data-set name="maps" data-source="self.ds_maps"  scrollable="1">
                                    <v:before-data-bind>
                                      if (not e.ve_is_post and self.del_item is not null)
                                      {
                                        delete from DB.DBA.SYS_RDF_MAPPERS where RM_ID = self.del_item;
                                      }
                               		  </v:before-data-bind>
                               		  <v:template name="maps_rep" type="repeat">
                             		      <v:template name="maps_brows" type="browse">
                                 			  <v:after-data-bind><![CDATA[
                                          if (not e.ve_is_post and control.te_rowset[3] = self.edit_item)
                                          {
                                            declare skey, _key, _uid, _opts any;
                                            declare i int;
                                            skey := control.te_rowset[5];
                                            skey := deserialize (skey);
                                            _opts := control.te_rowset[7];
                                            if (not isarray(skey))
                                            {
                                              _key := control.te_rowset[5];
                                              _uid := '';
                                            }
                                            else
                                            {
                                              _key := skey[0];
                                              _uid := skey[1];
                                            }
                                            self.desc1.ufl_value := control.te_rowset[2];
                                            self.patt1.ufl_value := control.te_rowset[0];
                                            self.typ1.ufl_value := control.te_rowset[1];
                                            self.pl1.ufl_value := control.te_rowset[4];
                                            self.key1.ufl_value := _key;
                                            self.key2.ufl_value := _uid;
                                            self.opts1.ufl_value := '';
                                            for (i := 0; i < length (_opts); i := i + 2)
                                            {
                                              self.opts1.ufl_value :=  self.opts1.ufl_value || _opts[i] || '=' || _opts[i+1] || '\n';
                                            }
                                          }
                                        ]]></v:after-data-bind>
                                			  <tr class="<?V case when self.edit_item = control.te_rowset[3] then 'listing_row_selected' when mod(control.te_ctr, 2) then 'listing_row_odd' else 'listing_row_even' end ?>">
                                			    <td>
                                				    <v:check-box name="cb_item" value="--(control.vc_parent as vspx_row_template).te_rowset[3]" initial-checked="--(control.vc_parent as vspx_row_template).te_rowset[6]"/>
                                			    </td>
                                			    <td>
                                				    <v:label name="la3" value="--(control.vc_parent as vspx_row_template).te_rowset[3]" />
                                			    </td>
                                			    <td>
                                				    <v:url name="ur1"
                                				      value='--concat (&apos;<img src="images/icons/edit_16.png" hspace="3" border="0"/>&apos;, (control.vc_parent as vspx_row_template).te_rowset[2])'
                                				      format="%s"
                                				      url="--sprintf ('rdf_filters.vspx?edit=%d', (control.vc_parent as vspx_row_template).te_rowset[3])"
                                				      xhtml_title="Edit"
                                				      xhtml_alt="Edit"
                                				    />
                                			    </td>
                                			    <td>
                                				    <v:label name="la2" value="--(control.vc_parent as vspx_row_template).te_rowset[1]" />
                              			      </td>
                                			    <td>
                                				    <v:label name="la1" format="%70.70s" value="--(control.vc_parent as vspx_row_template).te_rowset[0]"/>
                                			    </td>
                                			    <td nowrap="nowrap">
                                				    &nbsp;
                                				    <v:url name="ur2" value='<img src="images/icons/trash_16.png" hspace="3" border="0"/>Delete'
                                				      format="%s"
                                				      url="--sprintf ('rdf_filters.vspx?del=%d', (control.vc_parent as vspx_row_template).te_rowset[3])"
                                				      xhtml_title="Delete"
                                				      xhtml_alt="Delete"
                                				    />
                                				    &nbsp;
                                    				<v:button name="earul1" value="Up" action="simple" style="url">
                                  				    <v:on-post><![CDATA[
                                      					declare to_move, to_swap, mv_ord, sw_ord int;
                                      					if (not self.vc_is_valid)
                                      					  return;
                                      					to_swap := null;
                                      					to_move := (control.vc_parent as vspx_row_template).te_rowset[3];
                                      					for select RM_ID from DB.DBA.SYS_RDF_MAPPERS order by RM_ID do
                                    					  {
                                    					    if (RM_ID = to_move)
                                   					      {
                                   					        mv_ord := RM_ID;
                                   					        goto swapit;
                                   					      }
                                    					    to_swap := RM_ID;
                                    					    sw_ord := RM_ID;
                                    					  }
                                    					swapit:
                                    					  if (to_swap is not null)
                                    					  {
                                    					    update DB.DBA.SYS_RDF_MAPPERS set RM_ID = -1 where RM_ID = to_swap;
                                    					    update DB.DBA.SYS_RDF_MAPPERS set RM_ID = sw_ord where RM_ID = to_move;
                                    					    update DB.DBA.SYS_RDF_MAPPERS set RM_ID = mv_ord where RM_ID = -1;
                                    					  }
                                					      self.vc_data_bind (e);
                                				      ]]></v:on-post>
                                				    </v:button>
                                				    &nbsp;
                                				    <v:button name="earul2" value="Down" action="simple" style="url">
                                				      <v:on-post><![CDATA[
                                      					declare to_move, to_swap, mv_ord, sw_ord int;
                                      					if (not self.vc_is_valid)
                                      					  return;
                                      					to_swap := null;
                                      					to_move := (control.vc_parent as vspx_row_template).te_rowset[3];
                                      					mv_ord := null;
                                      					for select RM_ID from DB.DBA.SYS_RDF_MAPPERS order by RM_ID do
                                    					  {
                                    					    if (RM_ID = to_move)
                                  					      {
                                  					        mv_ord := RM_ID;
                                  					      }
                                    					    else if (mv_ord is not null)
                                  					      {
                                  					        to_swap := RM_ID;
                                        						sw_ord := RM_ID;
                                        						goto swapit;
                                  					      }
                                    					  }
                                    					swapit:
                                    					  if (to_swap is not null)
                                    					  {
                                    					    update DB.DBA.SYS_RDF_MAPPERS set RM_ID = -1 where RM_ID = to_swap;
                                    					    update DB.DBA.SYS_RDF_MAPPERS set RM_ID = sw_ord where RM_ID = to_move;
                                    					    update DB.DBA.SYS_RDF_MAPPERS set RM_ID = mv_ord where RM_ID = -1;
                                    					  }
                                					      self.vc_data_bind (e);
                                				      ]]></v:on-post>
                                				    </v:button>
                                			    </td>
                                			  </tr>
                                		  </v:template>
                                		</v:template>
                                		<v:template name="maps_footer" type="simple">
                                		  <tr>
                                			  <td colspan="6" class="listing_col_action">
                                			    <vm:ds-navigation data-set="maps" type="set" />
                                			  </td>
                                		  </tr>
                                	  </v:template>
                                  </v:data-set>
                                </table>
                        		    <v:button name="apply1" value="Apply" action="simple">
                        		      <v:on-post>
                                    <![CDATA[
                              			  declare M, N, enabled integer;
                              			  declare params, checked any;
                              			  declare chil vspx_control;
                              			  declare cb vspx_check_box;
                              			  declare ds vspx_data_set;

                                      params := e.ve_params;
                                      checked := vector();
                                      for (N := 0; N < length(params); N := N + 2)
                                      {
                                        if (params[N] like '%:cb_item%')
                                          checked := vector_concat (checked, vector (cast (params[N+1] as integer)));
                                      }
                              			  ds := self.maps;
                              			  M := 0;
                              			  while ((chil := ds.ds_iterate_rows (M)) is not null)
                            			    {
                            			      enabled := 0;
                            			      cb := chil.vc_find_control ('cb_item');
                                        for (N := 0; N < length (checked); N := N + 1)
                                        {
                                          if (checked[N] = cb.ufl_value)
                                          {
                                            enabled := 1;
                                            goto _skip;
                                          }
                                        }
                                      _skip:;
                                        update DB.DBA.SYS_RDF_MAPPERS set RM_ENABLED = enabled where RM_ID = cb.ufl_value;
                                        cb.ufl_selected := enabled;
                            			    }
                                      self.edit_item := null;
                                    ]]>
                        		      </v:on-post>
                        		    </v:button>
                              </v:form>
                              <v:form name="fm1" type="simple" method="POST">
                              	<div class="fm">
                              	  <fieldset>
                              		  <label for="desc1">Description</label>
                              		  <v:text name="desc1" value="" xhtml_id="desc1" error-glyph="*" xhtml_size="110">
                              		  </v:text>
                              		  <br/>
                              		  <label for="patt1">Pattern</label>
                              		  <v:text name="patt1" xhtml_id="patt1" error-glyph="*" value="" xhtml_size="110" />
                              		  <br />
                              		  <label for="typ1">Pattern Type</label>
                              		  <v:select-list name="typ1" value="" xhtml_id="typ1" error-glyph="*">
                              		    <v:item name="Content Type" value="MIME"/>
                              		    <v:item name="URL" value="URL"/>
                              		    <v:item name="HTTP protocol" value="HTTP"/>
                              		  </v:select-list>
                              		  <br />
                              		  <label for="pl1">Cartridge Name</label>
                              		  <v:text name="pl1" value="" xhtml_size="110" xhtml_id="pl1" error-glyph="*">
                              		  </v:text>
                              		  <br />
                              		  <label for="key2">API Account</label>
                              		  <v:text name="key2" value="" xhtml_size="110" xhtml_id="key2" error-glyph="*">
                              		  </v:text>
                              		  <br />
                              		  <label for="key1">API Key</label>
                              		  <v:text name="key1" value="" xhtml_size="110" xhtml_id="key1" error-glyph="*">
                              		  </v:text>
                              		  <br />
                              		  <label for="opts1">Options</label>
                              		  <v:textarea name="opts1" value="" xhtml_rows="5" xhtml_cols="70" xhtml_id="opts1" error-glyph="*">
                              		  </v:textarea>
                              		  <?vsp if (strstr (self.desc1.ufl_value, 'FQL') is not null) { ?>
                              		  <a href="fb_popup.vspx" target="_blank">Get Facebook session</a>
                              		  <?vsp } ?>
                              		  <?vsp if (strstr (self.desc1.ufl_value, 'Graph API') is not null) { ?>
                              		  <a href="/sponger/fb_access_token_popup.vsp" target="_blank">Get Facebook access token</a>
                              		  <?vsp } ?>
                              		  <br />
                            	      <span class="fm_ctl_btn">
                              		    <v:button name="cancel1" value="Cancel" action="simple" enabled="--equ(isnull(self.edit_item),0)">
                              		      <v:on-post>
                                          self.desc1.ufl_value := '';
                                          self.patt1.ufl_value := '';
                                          self.typ1.ufl_value := '';
                                          self.pl1.ufl_value := '';
                                          self.key1.ufl_value := '';
                                          self.opts1.ufl_value := '';
                                          self.edit_item := null;
                                          self.save1.vc_data_bind (e);
                                          control.vc_enabled := 0;
                              		      </v:on-post>
                              		    </v:button>
                              		    <v:button name="save1" value="--case when self.edit_item is null then 'Add' else 'Update' end" action="simple">
                              		      <v:on-post>
                                          declare _key, opts any;
                                          if (not self.vc_is_valid)
                                            return;

                                          declare exit handler for sqlstate '23000'
                                          {
                                            rollback work;
                                            self.vc_is_valid := 0;
                                            self.vc_error_message := 'The values entered conflict with other RDF Mapper. Please supply correct values.';
                                            return;
                                          };

                                          self.desc1.ufl_value := trim (self.desc1.ufl_value);
                                          self.patt1.ufl_value := trim (self.patt1.ufl_value);
                                          self.typ1.ufl_value  := trim (self.typ1.ufl_value);
                                          self.pl1.ufl_value   := trim (self.pl1.ufl_value);
                                          self.key1.ufl_value  := trim (self.key1.ufl_value);
                                          self.key2.ufl_value  := trim (self.key2.ufl_value);
                                          opts := trim(self.opts1.ufl_value);
                                          opts := replace (opts, '\r', '\n');
                                          opts := replace (opts, '\n\n', '\n');
                                          opts := rtrim (opts, '\n');
                                          if (length (opts))
                                          {
                                            opts := split_and_decode (opts, 0, '\0\0\n=');
                                          }
                                          else
                                            opts := null;

                                          if (not length (self.key2.ufl_value))
                                            _key := self.key1.ufl_value;
                                          else
                                            _key := serialize (vector (self.key1.ufl_value, self.key2.ufl_value));

                                          if (not length (self.desc1.ufl_value) or
                                              not length (self.patt1.ufl_value) or
                                              not length (self.typ1.ufl_value) or
                                              not length (self.pl1.ufl_value))
                                          {
                                            declare what any;
                                            what := case when length (self.desc1.ufl_value) = 0 then 'description' when length (self.patt1.ufl_value) = 0 then 'pattern'
                                            when length (self.typ1.ufl_value) = 0 then 'type' when length (self.pl1.ufl_value) = 0  then 'function' else 'field' end;

                                            rollback work;
                                            self.vc_is_valid := 0;
                                            self.vc_error_message := sprintf ('The %s value cannot be empty.', what);
                                            return;
                                          }
                                          if (self.edit_item is null)
                                          {
                                            insert into DB.DBA.SYS_RDF_MAPPERS (RM_PATTERN,RM_TYPE,RM_HOOK,RM_KEY,RM_DESCRIPTION, RM_OPTIONS)
                                              values (self.patt1.ufl_value,self.typ1.ufl_value,self.pl1.ufl_value,_key,self.desc1.ufl_value, opts);
                                          }
                                          else
                                          {
                                             update DB.DBA.SYS_RDF_MAPPERS
                                                set RM_PATTERN = self.patt1.ufl_value,
                                                    RM_TYPE = self.typ1.ufl_value,
                                                    RM_HOOK = self.pl1.ufl_value,
                                                    RM_KEY = _key,
                                                    RM_DESCRIPTION = self.desc1.ufl_value,
                                                    RM_OPTIONS = opts
                                              where RM_ID = self.edit_item;
                                          }
                                          self.desc1.ufl_value := '';
                                          self.patt1.ufl_value := '';
                                          self.typ1.ufl_value := '';
                                          self.pl1.ufl_value := '';
                                          self.key1.ufl_value := '';
                                          self.key2.ufl_value := '';
                                          self.opts1.ufl_value := '';
                                          self.edit_item := null;
                                          control.vc_data_bind (e);
                                          self.maps.vc_data_bind (e);
                                        </v:on-post>
                                      </v:button>
                                    </span>
                                  </fieldset>
                                </div>
                              </v:form>
                            </td>
                          </tr>
                        </table>
                      <!-- end tab  -->
                      </td>
                    </tr>
                  </table>
                </td>
              </tr>
            </table>
          <!-- end tab -->
          </td>
        </tr>
      </table>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
