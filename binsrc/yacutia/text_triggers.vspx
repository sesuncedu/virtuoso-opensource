<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2014 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page
  name="text_triggers"
  fast-render="1"
  xmlns:v="http://www.openlinksw.com/vspx/"
  xmlns:xhtml="http://www.w3.org/1999/xhtml"
  xmlns:vm="http://www.openlinksw.com/vspx/macro"
  doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
  doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

  <v:method name="sse_enabled2" arglist="">
    <![CDATA[
      if (__proc_exists ('WS.WS.SSE_ENABLED'))
        return WS.WS.SSE_ENABLED ();

      return 0;
    ]]>
  </v:method>

  <v:method name="sse_check_key" arglist="">
    <![CDATA[
      set_user_id ('dba');
      if (xenc_key_exists ('__sse_rsa'))
        return 1;

      return 0;
    ]]>
  </v:method>

  <v:method name="ttl_enabled2" arglist="">
    <![CDATA[
      if (__proc_exists ('WS.WS.TTL_REDIRECT_ENABLED'))
        return WS.WS.TTL_REDIRECT_ENABLED ();

      return 0;
    ]]>
  </v:method>

      <v:variable name="inter" type="integer" default="10" persist="0"/>
      <v:variable name="chk" type="integer" default="0" persist="0"/>
  <v:variable name="skin" type="integer" default="0" persist="0"/>
  <v:variable name="sse" type="integer" default="0" persist="0"/>
  <v:variable name="ttl" type="integer" default="0" persist="0"/>
      <v:variable name="c_text" type="varchar" default="''" persist="0"/>
      <v:before-data-bind>
          <![CDATA[
            declare _idx integer;
      declare _mode, _skin, _key varchar;
            declare _u_id, _mode1 integer;

            _idx := 0;
            self.chk := 0;
            self.c_text := '';

            _mode := registry_get('DELAY_UPDATE_WS_WS_SYS_DAV_RES');
            if (_mode = 'OFF')
              self.chk := 0;
            else if (_mode = 'ON')
              self.chk := 1;

      self.skin := case when registry_get ('__WebDAV_vspx__') = 'yes' then 1 else 0 end;
      self.sse := self.sse_enabled2 ();
      self.ttl := self.ttl_enabled2 ();
            if ('' <> get_keyword ('edit', control.vc_page.vc_event.ve_params, ''))
            {
              _mode1 := atoi(get_keyword('choice_source', control.vc_page.vc_event.ve_params));
              if (_mode1 = 1)
              {
                self.chk := 1;
                _mode := 'ON';
              }
              else if (_mode1 = 0)
              {
                self.chk := 0;
                _mode := 'OFF';
              }
              self.inter := atoi (get_keyword ('int', control.vc_page.vc_event.ve_params, '0'));
              if (self.inter < 0)
                self.inter := 10;
              if (self.inter = 0)
              {
                self.chk := 0;
                _mode := 'OFF';
              }
              DB.DBA.vt_batch_update('WS.WS.SYS_DAV_RES', _mode, self.inter);
              _mode := registry_get('DELAY_UPDATE_WS_WS_SYS_DAV_RES');
              if (_mode = 'OFF')
              {
                self.chk := 0;
                self.c_text := 'Indexing properties set to Continuously';
              }
              else if (_mode = 'ON')
              {
                self.chk := 1;
                self.c_text := 'Indexing properties set to Batch Mode';
              }

        -- WebDAV skin
        if (atoi (get_keyword ('choice_skin', control.vc_page.vc_event.ve_params)) = 1)
        {
          registry_set ('__WebDAV_vspx__', 'yes');
        }
        else
        {
          registry_set ('__WebDAV_vspx__', 'no');
        }
        self.skin := case when registry_get ('__WebDAV_vspx__') = 'yes' then 1 else 0 end;

        -- server side encryption
        if (atoi (get_keyword ('sse_enable', control.vc_page.vc_event.ve_params)) = 1)
        {
          registry_set ('__WebDAV_sse__', 'yes');
        }
        else
        {
          registry_set ('__WebDAV_sse__', 'no');
        }
        self.sse := self.sse_enabled2 ();

        -- .TTL redirect
        if (atoi (get_keyword ('ttl_enable', control.vc_page.vc_event.ve_params)) = 1)
        {
          registry_set ('__WebDAV_ttl__', 'yes');
        }
        else
        {
          registry_set ('__WebDAV_ttl__', 'no');
        }
        self.ttl := self.ttl_enabled2 ();
            }
      if ((self.sse = 1) and not self.sse_check_key ())
      {
        _key := '__sse_rsa';
        xenc_key_RSA_create (_key, 1024);
        USER_KEY_STORE ('dba', _key, 'RSA', 'DER', '');
      }
            self.inter := coalesce((select SE_INTERVAL from SYS_SCHEDULED_EVENT where upper (SE_NAME) = 'VT_INC_INDEX_WS_WS_SYS_DAV_RES()'), 10);
          ]]>
      </v:before-data-bind>
      <v:form name="inx_form" type="simple" method="POST" action="cont_page.vspx?page=3">
        <table class="SubData" border="0" cellpadding="3" cellspacing="0">
          <tr>
        <td width="180px">
          Text Indexing
        </td>
        <td width="1px">
              <v:radio-button name="persist_enable" value="0" group-name="choice_source" xhtml_id="choice_source1">
                <v:before-data-bind>
                    <![CDATA[
                control.ufl_selected := case when (self.chk = 0) then 1 else 0 end;
                      control.vc_data_bound := 1;
                    ]]>
                </v:before-data-bind>
              </v:radio-button>
            </td>
        <td colspan="2">
              <label for="choice_source1">Continuously</label>
            </td>
          </tr>
          <tr>
        <td/>
            <td>
              <v:radio-button name="realtime_enable" value="1" group-name="choice_source" xhtml_id="choice_source2">
                <v:before-data-bind>
                    <![CDATA[
                control.ufl_selected := case when (self.chk = 0) then 0 else 1 end;
                      control.vc_data_bound := 1;
                    ]]>
                </v:before-data-bind>
              </v:radio-button>
            </td>
        <td colspan="2">
              <label for="choice_source2">Batch Mode</label>
            </td>
          </tr>
          <tr>
        <td></td>
        <td></td>
        <td>
          Update every <input type="text" name="int" value="<?V self.inter ?>"/> minutes
        </td>
      </tr>
      <tr>
        <td valign="top">
          Enable redirection for .TTL files
        </td>
        <td colspan="2">
          <label>
            <v:check-box name="ttl_enable" value="1" xhtml_id="ttl_enable">
              <v:before-data-bind>
                <![CDATA[
                  control.ufl_selected := case when (self.ttl = 0) then 0 else 1 end;
                  control.vc_data_bound := 1;
                ]]>
              </v:before-data-bind>
            </v:check-box> ('text/html' content negotiation only)
          </label>
        </td>
      </tr>
      <?vsp
        -- only for Conductor DAV VADs
        if (__proc_exists ('WS.WS.SSE_ENABLED'))
        {
      ?>
      <tr>
        <td valign="top">
          Server side encryption
        </td>
        <td colspan="2">
          <v:check-box name="sse_enable" value="1" xhtml_id="sse_enable">
            <v:before-data-bind>
              <![CDATA[
                control.ufl_selected := case when (self.sse = 0) then 0 else 1 end;
                control.vc_data_bound := 1;
              ]]>
            </v:before-data-bind>
          </v:check-box>
      		<?vsp
            if (self.sse_check_key ())
        		{
        		  http ('<br /><input type="button" name="dwn" id="dwn" value="Download SSE RSA Key" onclick="javascript: document.location = ''sec_pki_download.vsp?key=__sse_rsa&user=dba''; return false;" />');
      		  }
      		?>
        </td>
      </tr>
      <?vsp
        }
        -- only for Conductor DAV VADs
        if ((select top 1 HP_STORE_AS_DAV from DB.DBA.HTTP_PATH where HP_LPATH = '/conductor') = 1)
        {
      ?>
      <tr>
        <td>
          WebDAV Skin
        </td>
        <td width="1px">
          <v:radio-button name="vspx_enable" value="1" group-name="choice_skin" xhtml_id="choice_skin1">
            <v:before-data-bind>
              <![CDATA[
                control.ufl_selected := case when (self.skin = 0) then 0 else 1 end;
                control.vc_data_bound := 1;
              ]]>
            </v:before-data-bind>
          </v:radio-button>
        </td>
        <td colspan="2">
          <label for="choice_skin1">All Features List</label>
        </td>
      </tr>
      <tr>
            <td/>
            <td>
          <v:radio-button name="xslt_enable" value="0" group-name="choice_skin" xhtml_id="choice_skin2">
            <v:before-data-bind>
              <![CDATA[
                control.ufl_selected := case when (self.skin = 0) then 1 else 0 end;
                control.vc_data_bound := 1;
              ]]>
            </v:before-data-bind>
          </v:radio-button>
        </td>
        <td colspan="2">
          <label for="choice_skin2">Simple List</label>
            </td>
          </tr>
      <?vsp
        }
      ?>
          <tr>
        <td/>
        <td colspan="2">
              <input type="reset" value=" Reset"/>
              <input type="submit" name="edit" value="Accept"/>
            </td>
          </tr>
	  <?vsp
	    -- this should not be shown here
            if (0 and self.c_text is not null and self.c_text <> '')
            {
          ?>
          <tr>
            <td class="Warning" align="center" colspan="2">
              <p>
                <?vsp
                  http(self.c_text);
                  self.c_text := '';
                ?>
              </p>
            </td>
          </tr>
          <?vsp
            }
          ?>
        </table>
      </v:form>
</v:page>
